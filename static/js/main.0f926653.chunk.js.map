{"version":3,"sources":["App.js","components/Button/Button.js","components/ButtonBox/ButtonBox.js","reportWebVitals.js","index.js"],"names":["operatorsRegex","App","props","state","display","expression","handleDigits","bind","handleOperators","handleNumbers","displayResult","resetDisplay","e","preventDefault","input","target","innerHTML","this","setState","prevState","prevDisplay","prevExpress","lastCharacter","length","test","match","join","console","log","pop","eval","displayExpression","displayString","className","id","displayOperations","Component","Button","onClick","handle","value","Numbers","ButtonBox","num","NumberButtons","flat","map","number","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"s0DAIMA,eAAiB,WAEjBC,I,sXAEJ,aAAYC,GAAO,IAAD,yLAChB,mBAAMA,IACDC,MAAQ,CACXC,QAAU,CAAC,GACXC,WAAW,CAAC,IAGd,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gLACpB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,gLACvB,EAAKE,cAAgB,EAAKA,cAAcF,KAAnB,gLACrB,EAAKG,cAAgB,EAAKA,cAAcH,KAAnB,gLACrB,EAAKI,aAAe,EAAKA,aAAaJ,KAAlB,gLAXJ,E,wMAclB,SAAcK,GAAG,IAAD,OACdA,EAAEC,iBAEF,IAAMC,EAAQF,EAAEG,OAAOC,UAEvBC,KAAKC,UAAS,SAAAC,GACZ,IAAMC,EAAcD,EAAUf,QACxBiB,EAAeF,EAAUd,WACzBiB,EAAgBD,EAAYA,EAAYE,OAAO,GAErD,OAAIvB,eAAewB,KAAKV,GAIf,EAAKN,gBAAgBY,EAAaC,EAAaC,EAAeR,GAH9D,EAAKL,cAAcW,EAAaC,EAAaC,EAAeR,Q,2BAQzE,SAAcM,EAAaC,EAAaC,EAAeR,GAEvD,OAA0B,IAAvBO,EAAYE,QAAmC,IAAnBF,EAAY,GAE7B,KAATP,EACO,CAACV,QAAQ,GAAD,+KAAMgB,GAAN,wKAAsBC,IAC9BhB,WAAY,CAAC,EAAGS,IACR,KAATA,EACD,CACNT,WAAY,CAAC,IAEL,CAACD,QAAS,CAACU,GACjBT,WAAY,CAACS,IAEVQ,EAAcG,MAAM,UACnB,CAACrB,QAAQ,GAAD,+KAAMgB,GAAN,CAAmBN,IAC3BT,WAAY,CAACS,IAGT,KAATA,GAAgB,KAAKU,KAAKH,EAAYK,KAAK,UAC5CC,QAAQC,IAAI,qBAEJ,CAACxB,QAAQ,GAAD,+KAAMgB,GAAN,CAAmBN,IACjCT,WAAW,GAAD,+KAAMgB,GAAN,CAAmBP,O,6BAInC,SAAgBM,EAAaC,EAAaC,EAAeR,GACvD,GAAGM,EAAYG,QAAS,GAA4B,IAAvBF,EAAYE,QAAmC,IAAnBF,EAAY,GACnE,MAAQ,CAACjB,QAAQ,GAAD,+KAAMgB,GAAN,CAAmBN,IACjCT,WAAY,CAACS,IAEZ,IAAIQ,EAAcG,MAAM,UAC3B,MAAQ,CAACrB,QAAQ,GAAD,+KAAMgB,GAAN,CAAmBN,IAC3BT,WAAY,CAACS,IAGlB,GAAGQ,EAAcG,MAAM,WAAuB,MAAVX,EACvC,MAAQ,CAACT,WAAW,wKAAKgB,IAGtB,GAAY,KAATP,EAAa,CACnB,GAAG,MAAMU,KAAKF,GACZ,MAAQ,CAAClB,QAAQ,GAAD,+KAAMgB,GAAN,CAAmBN,IACjCT,WAAW,GAAD,+KAAMgB,GAAN,CAAmBP,KAE/Ba,QAAQC,IAAI,kC,2BAKlB,SAAAlB,gBACE,IAAMN,QAAUa,KAAKd,MAAMC,QACxB,YAAYoB,KAAKpB,QAAQsB,KAAK,MAC/BtB,QAAQyB,MAEVZ,KAAKC,SAAS,CAACd,QAAS,CAAC0B,KAAK1B,QAAQsB,KAAK,MAC5BrB,WAAY,CAAC,O,0BAG9B,WACEY,KAAKC,SAAS,CAACd,QAAS,CAAC,GACTC,WAAY,CAAC,O,oBAG/B,WAEE,IAAM0B,EAAoBd,KAAKd,MAAME,WAAWqB,KAAK,IAC/CM,EAAgBf,KAAKd,MAAMC,QAAQsB,KAAK,IAE9C,OACE,mEAAKO,UAAU,MAAf,UACE,qEAAQA,UAAU,aAAlB,SACE,qGAEF,mEAAMC,GAAG,UAAUD,UAAU,WAA7B,SACE,mEAAKA,UAAU,aAAf,UACA,mEAAKA,UAAU,UAAf,UACE,gEAAGC,GAAG,UAAN,SAAkBF,IAClB,yEAAID,OAEN,2DAAC,+DAAD,CACEI,kBAAmBlB,KAAKX,aACxBI,cAAeO,KAAKP,cACpBC,aAAcM,KAAKN,2B,KAvHbyB,8CAkIHnC,2B,yFCtHAoC,EAbA,SAACnC,GAAD,OACb,qBAAK+B,UAAW/B,EAAM+B,UAAWC,GAAIhC,EAAMgC,GAAII,QAASpC,EAAMqC,OAA9D,SACGrC,EAAMsC,SCDLC,EAAU,CACd,CACE,CACEP,GAAI,QACJM,MAAO,KAET,CACAN,GAAI,MACJM,MAAO,MAET,CAAC,CACCN,GAAI,MACJM,MAAO,GAET,CACEN,GAAI,MACJM,MAAO,GAET,CACEN,GAAI,QACJM,MAAO,GAET,CACEN,GAAI,WACJM,MAAO,MAGT,CAAC,CACCN,GAAI,OACJM,MAAO,GAET,CACEN,GAAI,OACJM,MAAO,GAET,CACEN,GAAI,MACJM,MAAO,GAET,CACEN,GAAI,WACJM,MAAO,MAGT,CAAC,CACCN,GAAI,QACJM,MAAO,GAET,CACEN,GAAI,QACJM,MAAO,GAET,CACEN,GAAI,OACJM,MAAO,GAET,CACEN,GAAI,SACJM,MAAO,MAET,CACA,CACEN,GAAI,OACJM,MAAO,GAET,CACEN,GAAI,UACJM,MAAO,KAET,CACEN,GAAI,SACJM,MAAO,OAKLE,E,kDAEJ,WAAYxC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAM,CACTwC,IAAK,GAHS,E,0CAOlB,WAAS,IAAD,OAEAC,EAAgBH,EAAQI,OAAOC,KAAI,SAACC,EAAQC,GAC9C,OAAO,cAAC,EAAD,CAECd,GAAIa,EAAOb,GACXM,MAAOO,EAAOP,MACdP,UACmB,MAAjBc,EAAOP,MAAgB,gBACN,MAAjBO,EAAOP,MAAgB,eAAiB,gBAE1CD,OACmB,MAAjBQ,EAAOP,MAAgB,EAAKtC,MAAMQ,cACX,MAAjBqC,EAAOP,MAAgB,EAAKtC,MAAMS,aAClC,EAAKT,MAAMiC,mBAVda,MAajB,OAEA,qBAAKf,UAAU,YAAf,SACGW,Q,GA7BiBR,aA0CTM,O,qKChHAO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC3D,EAAA,EAAD,MAEF4D,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0f926653.chunk.js","sourcesContent":["import './App.scss';\nimport ButtonBox from './components/ButtonBox/ButtonBox';\nimport { React, Component } from 'react';\n\nconst operatorsRegex = /[+/\\-*]/g;\n\nclass App extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      display : [0],\n      expression:[0]\n    }\n    \n    this.handleDigits = this.handleDigits.bind(this);\n    this.handleOperators = this.handleOperators.bind(this);\n    this.handleNumbers = this.handleNumbers.bind(this)\n    this.displayResult = this.displayResult.bind(this);\n    this.resetDisplay = this.resetDisplay.bind(this);\n  }\n  \n  handleDigits (e){\n    e.preventDefault(); \n\n    const input = e.target.innerHTML;\n\n    this.setState(prevState =>{\n      const prevDisplay = prevState.display,\n            prevExpress =  prevState.expression,\n            lastCharacter = prevExpress[prevExpress.length-1] ;\n  \n      if(!operatorsRegex.test(input)){ //if input is a number\n        return this.handleNumbers(prevDisplay, prevExpress, lastCharacter, input)\n      \n      }else{ //if input is an operator   \n        return this.handleOperators(prevDisplay, prevExpress, lastCharacter, input)\n      }\n  })\n  }\n\n  handleNumbers(prevDisplay, prevExpress, lastCharacter, input){\n  //If it's starting point and starts from 0\n  if(prevExpress.length === 1 && prevExpress[0] === 0){\n\n    if(input == '.'){ //allow 0.xxx\n      return ({display: [...prevDisplay, ...prevExpress],\n              expression: [0, input]})\n    }else if(input == '0'){ //don't repeat 0\n    return ({\n      expression: [0]})\n    }else{ //presses number   \n      return ({display: [input],\n        expression: [input]})\n      }\n  }else if(lastCharacter.match(/[+*/-]/)){\n    return ({display: [...prevDisplay, input],\n            expression: [input]})\n  }else{//if input has already started\n    //check if decimal has already been entered\n    if(input == '.' && /\\./.test(prevExpress.join(''))){\n      console.log('already a decimal')\n    }else{//we enter number\n      return ({display: [...prevDisplay, input],\n        expression: [...prevExpress, input]})\n    }\n}\n  } \n  handleOperators(prevDisplay, prevExpress, lastCharacter, input){\n    if(prevDisplay.length >=1 && prevExpress.length === 1 && prevExpress[0] === 0){\n      return ({display: [...prevDisplay, input],\n        expression: [input]});\n    }\n    else if(!lastCharacter.match(/[+*/-]/)){ //If we are following a number\n      return ({display: [...prevDisplay, input],\n              expression: [input]})\n    }\n    //if last character was an operator, and input is not '-', prevent repetition\n    else if(lastCharacter.match(/[+*/-]/) && input !== '-'){\n      return ({expression: [...prevExpress]})\n    }\n    //if input is '-' but is following a * or a /\n    else if(input == '-'){\n      if(/\\/*/.test(lastCharacter)){   \n        return ({display: [...prevDisplay, input],\n          expression: [...prevExpress, input]})  \n      }else{\n        console.log('cannot enter - after + or -');\n      }\n    }   \n  }\n\n  displayResult(){\n    const display = this.state.display;\n    if(/[+*/\\-.]$/.test(display.join(''))){\n      display.pop();\n    }\n    this.setState({display: [eval(display.join(''))], \n                   expression: [0]});\n  }\n\n  resetDisplay(){\n    this.setState({display: [0], \n                    expression: [0]});\n  }\n  \n  render(){\n\n    const displayExpression = this.state.expression.join('');\n    const displayString = this.state.display.join('');\n\n    return (\n      <div className='App'>\n        <header className='App-header'>\n          <p>Javascript Calculator</p>\n        </header>\n        <main id='wrapper' className='App-main'>\n          <div className='Calculator'>\n          <div className='Display'>\n            <p id='display' >{displayString}</p>\n            <p>{displayExpression}</p>\n          </div>  \n          <ButtonBox \n            displayOperations={this.handleDigits} \n            displayResult={this.displayResult}\n            resetDisplay={this.resetDisplay} />\n            </div>\n        </main>\n        \n      </div>\n    );\n  }\n\n  \n}\n\nexport default App;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.scss';\n\n\nconst Button = (props) => (\n  <div className={props.className} id={props.id} onClick={props.handle} >\n    {props.value}\n  </div>\n);\n\nButton.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  handle: PropTypes.func,\n  value: PropTypes.any\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './ButtonBox.scss';\n\nimport Button from '../Button/Button';\n\nconst Numbers = [\n  [\n    {\n      id: 'clear', \n      value: 'C'\n    },\n    {\n    id: 'add',\n    value: '+'\n  }], \n  [{\n    id: 'one', \n    value: 1\n  }, \n  {\n    id: 'two', \n    value: 2\n  }, \n  {\n    id: 'three', \n    value: 3\n  }, \n  {\n    id: 'subtract',\n    value: '-'\n  }],\n\n  [{\n    id: 'four', \n    value: 4\n  }, \n  {\n    id: 'five', \n    value: 5\n  }, \n  {\n    id: 'six', \n    value: 6\n  }, \n  {\n    id: 'multiply',\n    value: '*'\n  }],\n \n  [{\n    id: 'seven', \n    value: 7\n  }, \n  {\n    id: 'eight', \n    value: 8\n  }, \n  {\n    id: 'nine', \n    value: 9\n  }, \n  {\n    id: 'divide',\n    value: '/'\n  }],\n  [\n  {\n    id: 'zero', \n    value: 0\n  }, \n  {\n    id: 'decimal', \n    value: '.'\n  }, \n  {\n    id: 'equals', \n    value: '='\n  }\n]\n]\n\nclass ButtonBox extends Component {\n\n  constructor(props){\n    super(props)\n    this.state={\n      num: 0,\n    }\n  }\n  \n  render(){\n\n    const NumberButtons = Numbers.flat().map((number, i) =>{\n        return <Button \n                key={i} \n                id={number.id} \n                value={number.value} \n                className={\n                  number.value === '=' ? 'Button Result' : \n                  number.value === 'C' ? 'Button Reset' : 'Button Number'\n                }\n                handle={\n                  number.value === '=' ? this.props.displayResult : \n                        number.value === 'C' ? this.props.resetDisplay : \n                        this.props.displayOperations\n                } /> })\n        \n    return(\n\n    <div className=\"ButtonBox\">\n      {NumberButtons}\n    </div>\n    )\n  }\n    \n}\n\nButtonBox.propTypes = {\n  displayOperations: PropTypes.func,\n  displayResult: PropTypes.func,\n  resetDisplay: PropTypes.func,\n};\n\nexport default ButtonBox;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}